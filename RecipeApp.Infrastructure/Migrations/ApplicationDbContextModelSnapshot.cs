// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeApp.Infrastructure;

#nullable disable

namespace RecipeApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeApp.Domain.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("5528f110-0c49-4e76-a746-c6e6fabc5d99"),
                            Name = "Mąka pszenna"
                        },
                        new
                        {
                            ID = new Guid("900d93d4-bf2f-4cd1-8eb4-4549d2b17622"),
                            Name = "Cukier"
                        },
                        new
                        {
                            ID = new Guid("7d217348-9187-4521-9da6-f185d515f051"),
                            Name = "Masło"
                        },
                        new
                        {
                            ID = new Guid("4294f87a-d8c5-4005-a315-11d592a74c09"),
                            Name = "Jajka"
                        },
                        new
                        {
                            ID = new Guid("86c041f0-185e-4050-be1c-1ce7ba5cd070"),
                            Name = "Mleko"
                        },
                        new
                        {
                            ID = new Guid("2f0775fe-1aa3-4772-b4cf-f0c17c4d0e4b"),
                            Name = "Sól"
                        },
                        new
                        {
                            ID = new Guid("1a3f3d48-7b4a-4970-97cd-1ce6ac2e4deb"),
                            Name = "Oliwa z oliwek"
                        },
                        new
                        {
                            ID = new Guid("6d71d442-8855-423e-9fa9-dfc71c41ef95"),
                            Name = "Drożdże"
                        },
                        new
                        {
                            ID = new Guid("af9f9c52-4cb9-405c-983f-0ba5f57f79ec"),
                            Name = "Cebula"
                        },
                        new
                        {
                            ID = new Guid("7e52f8fc-5714-4e53-b6c1-c227bba079b4"),
                            Name = "Czosnek"
                        });
                });

            modelBuilder.Entity("RecipeApp.Domain.Entities.Recipe", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PreparationTime")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("a6c1e7e1-7d43-4b45-9f8e-2b74b3a0f1d2"),
                            Author = "Jan Kowalski",
                            Category = 0,
                            CreatedAt = new DateTime(2025, 10, 25, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tradycyjne cienkie naleśniki z mąki, mleka i jajek, idealne do słodkich dodatków.",
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/10/25/12/28/pancakes-1763756_1280.jpg",
                            Name = "Naleśniki klasyczne",
                            PreparationTime = 20,
                            Rating = 4.5,
                            Servings = 4
                        },
                        new
                        {
                            ID = new Guid("d2c8e8ac-054d-48b7-a893-98c1b49f7c21"),
                            Author = "Anna Nowak",
                            Category = 1,
                            CreatedAt = new DateTime(2025, 10, 25, 10, 10, 0, 0, DateTimeKind.Utc),
                            Description = "Aksamitna zupa z pieczonej dyni, z dodatkiem imbiru i śmietanki.",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/10/24/23/12/pumpkin-soup-2885151_1280.jpg",
                            Name = "Zupa krem z dyni",
                            PreparationTime = 45,
                            Rating = 4.7999999999999998,
                            Servings = 3
                        },
                        new
                        {
                            ID = new Guid("c4f5b3e4-bc11-42d1-8e5f-4fd8a788fa6e"),
                            Author = "Luca Rossi",
                            Category = 4,
                            CreatedAt = new DateTime(2025, 10, 25, 10, 20, 0, 0, DateTimeKind.Utc),
                            Description = "Klasyczne włoskie danie z makaronu, oliwy, czosnku i chili.",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/07/16/10/43/spaghetti-2508184_1280.jpg",
                            Name = "Spaghetti aglio e olio",
                            PreparationTime = 25,
                            Rating = 4.7000000000000002,
                            Servings = 2
                        },
                        new
                        {
                            ID = new Guid("b7125d3f-7f6d-4ac4-9f9e-98e022bca3f4"),
                            Author = "Maria Papadopoulos",
                            Category = 2,
                            CreatedAt = new DateTime(2025, 10, 25, 10, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Świeża sałatka z pomidorami, ogórkiem, serem feta i oliwkami.",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/06/05/17/29/salad-2380329_1280.jpg",
                            Name = "Sałatka grecka",
                            PreparationTime = 15,
                            Rating = 4.5999999999999996,
                            Servings = 2
                        },
                        new
                        {
                            ID = new Guid("e32dbe67-cb17-4962-bc9d-b3bb3c1f10af"),
                            Author = "Julia Nowak",
                            Category = 3,
                            CreatedAt = new DateTime(2025, 10, 25, 10, 40, 0, 0, DateTimeKind.Utc),
                            Description = "Intensywnie czekoladowe, wilgotne brownie z chrupiącą skórką.",
                            ImageUrl = "https://cdn.pixabay.com/photo/2018/06/09/16/00/brownie-3461511_1280.jpg",
                            Name = "Brownie czekoladowe",
                            PreparationTime = 50,
                            Rating = 4.9000000000000004,
                            Servings = 6
                        });
                });

            modelBuilder.Entity("RecipeApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid>("RecipeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("RecipeID");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("RecipeApp.Domain.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("RecipeApp.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeApp.Domain.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
